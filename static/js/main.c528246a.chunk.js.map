{"version":3,"sources":["img/logo.svg","img/sunny.svg","img/planet.png","img/banana.svg","img/dragonfruit.png","img/house.png","img/teddy_sailing.png","img/worm.png","img/fire.png","img/birdy.png","img/bike.png","img/ocean.png","img/carrie.svg","components/Illustrations.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Illustrations","react_default","a","createElement","className","class","src","birdy","alt","banana","worm","sunny","planet","teddy_sailing","fire","dragonfruit","house","bike","ocean","PureComponent","Main","href","carrie","App","react_router_dom","to","logo","onClick","activeClassName","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c528246a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ddb22d1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.90b7234e.svg\";","module.exports = __webpack_public_path__ + \"static/media/planet.6842d01a.png\";","module.exports = __webpack_public_path__ + \"static/media/banana.12020fd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragonfruit.2d8a751d.png\";","module.exports = __webpack_public_path__ + \"static/media/house.b628bea5.png\";","module.exports = __webpack_public_path__ + \"static/media/teddy_sailing.8a2f2df4.png\";","module.exports = __webpack_public_path__ + \"static/media/worm.b7be9b13.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.4b21bc67.png\";","module.exports = __webpack_public_path__ + \"static/media/birdy.7d753d84.png\";","module.exports = __webpack_public_path__ + \"static/media/bike.7641f22b.png\";","module.exports = __webpack_public_path__ + \"static/media/ocean.aebd42a8.png\";","module.exports = __webpack_public_path__ + \"static/media/carrie.d768dc02.svg\";","import React, { PureComponent } from 'react';\n\nimport sunny from '../img/sunny.svg';\nimport planet from '../img/planet.png';\nimport banana from '../img/banana.svg';\nimport dragonfruit from '../img/dragonfruit.png';\nimport house from '../img/house.png';\nimport teddy_sailing from '../img/teddy_sailing.png';\nimport worm from '../img/worm.png';\nimport fire from '../img/fire.png';\nimport birdy from '../img/birdy.png';\nimport bike from '../img/bike.png';\nimport ocean from '../img/ocean.png';\nimport './Illustrations.css';\n\nclass Illustrations extends PureComponent {\n  render() {\n    return (\n      <div className=\"Illustrations\">\n\n       <h1></h1>\n        <h1 class=\"title\"> I recently downloaded Illustrator and Procreate and am having a thrill of a time. Here are a few of the projects I&#39;ve made. </h1>\n        \n        <img src={birdy} className=\"image\" alt=\"birdy\" />\n        <p>Each stroke on this adorable fluff was a pain to draw. In fact, this constituted a major motivation to switch from drawing on my iPad to Illustrator.</p>\n        \n        <img src={banana} className=\"image\" alt=\"banana\" />\n        <p>The first thing I ever drew with Illustrator. A rather tasty fruit, albeit with too narrow an ideal-ripeness range.</p>\n\n        <img src={worm} className=\"image\" alt=\"worm\" />\n        <p>I initially wanted to create an entire mock Facebook sticker set with this worm. But if you really think about it, there are only so many emotions you can convey with a worm. Will definitely revisit this project later.</p>\n       \n        <img src={sunny} className=\"image spin\" alt=\"sunny\" />\n        <p>A blazing 7:46pm Montreal August sun. Kind of a prelude to my solar system design below. If you watch it, the sun is actually rotating (cool React/Javascript animation right?) </p>  \n        \n        <img src={planet} className=\"image\" alt=\"planet\" />\n        <p>Glass planet, inspired by a post on Dribbble. The funnest thing was experimenting with blending modes - my favourite effect is Colour Dodge with that planet in the right corner. </p>\n       \n        <img src={teddy_sailing} className=\"image\" alt=\"teddy_sailing\" />\n        <p>I was so enamoured by the glass planet that I made a variation on it - this time a lonely but optimistic teddy bear sails on turbulent waters. This is how it turned out.</p>\n        \n        <img src={fire} className=\"image\" alt=\"fire\" />\n        <p>Gradients are fun.</p>\n        \n        <img src={dragonfruit} className=\"image\" alt=\"dragonfruit\" />\n        <p>I wanted to do justice to the quirkiest of fruits with a beautiful colour scheme. Also, I learned how to make shadows on this one.</p>\n        \n        <img src={house} className=\"image\" alt=\"house\" />\n        <p>I wanted to get in on the isometric design trend so I made a house using a 57.73% tilted grid and painstakingly following the lines. Quite satisfying to look at though. </p>\n       \n        <img src={bike} className=\"image\" alt=\"bike\" />\n        <p>Drawing on Procreate is a lot of fun after you get to know the useful functions. For example, all the straight lines and perfect circles were made by holding down my pen (after erasing and trying again billions of times).</p>\n       \n        <img src={ocean} className=\"image\" alt=\"ocean\" />\n        <p>I have a preoccupation with birds. </p>\n      </div>\n    );\n  }\n}\n\nexport default Illustrations;\n","import React, { PureComponent } from 'react';\n\nimport './Main.css';\nimport carrie from '../img/carrie.svg';\n\nclass Main extends PureComponent {\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"left\">\n            <h1 className=\"name\">hello,</h1>\n            <h1 className=\"name\">i'm carrie.</h1>\n            <div className=\"words\">\n                aspiring artist and product designer\n            </div>\n            <a href=\"mailto:carrierong37@gmail.com\" className=\"contact\">\n                CONTACT\n            </a>\n        </div>\n        <img src={carrie} className=\"portrait\" alt=\"carrie\" />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { PureComponent } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, NavLink } from \"react-router-dom\";\n\nimport logo from './img/logo.svg';\nimport Illustrations from './components/Illustrations';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"Navbar\">\n            <Link to=\"/\">\n              <img\n                src={logo}\n                className=\"logo\"\n                alt=\"carrie\" \n                onClick={() => {}}\n              />\n            </Link>\n            <NavLink to=\"/illustrations\" className=\"illustrations\" activeClassName=\"selected\">\n              illustrations\n              \n            </NavLink>\n          </div>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route path=\"/illustrations\" component={Illustrations} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}